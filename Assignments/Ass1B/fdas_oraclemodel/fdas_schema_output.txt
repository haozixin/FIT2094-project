SQL> 
SQL> 
SQL> 
SQL> 
SQL> DROP TABLE assessment_damage CASCADE CONSTRAINTS;

Table ASSESSMENT_DAMAGE dropped.

SQL> 
SQL> DROP TABLE assessor CASCADE CONSTRAINTS;

Table ASSESSOR dropped.

SQL> 
SQL> DROP TABLE building CASCADE CONSTRAINTS;

Table BUILDING dropped.

SQL> 
SQL> DROP TABLE employment CASCADE CONSTRAINTS;

Table EMPLOYMENT dropped.

SQL> 
SQL> DROP TABLE fire_event CASCADE CONSTRAINTS;

Table FIRE_EVENT dropped.

SQL> 
SQL> DROP TABLE fire_lga CASCADE CONSTRAINTS;

Table FIRE_LGA dropped.

SQL> 
SQL> DROP TABLE insurer CASCADE CONSTRAINTS;

Table INSURER dropped.

SQL> 
SQL> DROP TABLE local_government_area CASCADE CONSTRAINTS;

Table LOCAL_GOVERNMENT_AREA dropped.

SQL> 
SQL> DROP TABLE owner CASCADE CONSTRAINTS;

Table OWNER dropped.

SQL> 
SQL> DROP TABLE property CASCADE CONSTRAINTS;

Table PROPERTY dropped.

SQL> 
SQL> DROP TABLE property_type CASCADE CONSTRAINTS;

Table PROPERTY_TYPE dropped.

SQL> 
SQL> DROP TABLE visit CASCADE CONSTRAINTS;

Table VISIT dropped.

SQL> 
SQL> -- predefined type, no DDL - MDSYS.SDO_GEOMETRY
SQL> 
SQL> -- predefined type, no DDL - XMLTYPE
SQL> 
SQL> CREATE TABLE assessment_damage (
  2      asse_dam_no          NUMBER(7) NOT NULL,
  3      fire_event_id        CHAR(9 BYTE) NOT NULL,
  4      pro_id               NUMBER(7) NOT NULL,
  5      building_id          NUMBER(3) NOT NULL,
  6      asse_bdamage_cost    NUMBER(8, 2) NOT NULL,
  7      asse_building_value  NUMBER(5) NOT NULL,
  8      assessor_id          NUMBER(7)
  9  );

Table ASSESSMENT_DAMAGE created.

SQL> 
SQL> COMMENT ON COLUMN assessment_damage.asse_dam_no IS
  2      ' number of the assessment damage (surrogate key)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessment_damage.fire_event_id IS
  2      'fire event ID
  3  ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessment_damage.pro_id IS
  2      'property ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessment_damage.building_id IS
  2      'building ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessment_damage.asse_bdamage_cost IS
  2      'the damage cost of the building in assessment';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessment_damage.asse_building_value IS
  2      'building value(assigned by LGA) in assessment ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessment_damage.assessor_id IS
  2      'assessor ID';

Comment created.

SQL> 
SQL> ALTER TABLE assessment_damage ADD CONSTRAINT assessment_damage_pk PRIMARY KEY ( asse_dam_no );

Table ASSESSMENT_DAMAGE altered.

SQL> 
SQL> ALTER TABLE assessment_damage
  2      ADD CONSTRAINT assessment_damage_nk UNIQUE ( pro_id,
  3                                                   building_id,
  4                                                   fire_event_id );

Table ASSESSMENT_DAMAGE altered.

SQL> 
SQL> CREATE TABLE assessor (
  2      assessor_id             NUMBER(7) NOT NULL,
  3      assessor_gname          VARCHAR2(30 BYTE),
  4      assessor_fname          VARCHAR2(30 BYTE),
  5      assessor_contactnumber  CHAR(10 BYTE) NOT NULL,
  6      insur_code              NUMBER(7) NOT NULL
  7  );

Table ASSESSOR created.

SQL> 
SQL> COMMENT ON COLUMN assessor.assessor_id IS
  2      'assessor ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessor.assessor_gname IS
  2      'assessor_given name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessor.assessor_fname IS
  2      'assessor_family name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessor.assessor_contactnumber IS
  2      'assessor''s contact number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessor.insur_code IS
  2      'insurer code';

Comment created.

SQL> 
SQL> ALTER TABLE assessor ADD CONSTRAINT assessor_pk PRIMARY KEY ( assessor_id );

Table ASSESSOR altered.

SQL> 
SQL> CREATE TABLE building (
  2      building_id             NUMBER(3) NOT NULL,
  3      pro_id                  NUMBER(7) NOT NULL,
  4      building_size           NUMBER(3) NOT NULL,
  5      building_date           DATE NOT NULL,
  6      building_class          CHAR(2 BYTE) NOT NULL,
  7      building_insur_cov      CHAR(1 BYTE) NOT NULL,
  8      builidng_totally_destr  CHAR(1 BYTE) NOT NULL,
  9      insur_code              NUMBER(7)
 10  );

Table BUILDING created.

SQL> 
SQL> ALTER TABLE building
  2      ADD CHECK ( building_insur_cov IN ( 'N', 'Y' ) );

Table BUILDING altered.

SQL> 
SQL> ALTER TABLE building
  2      ADD CHECK ( builidng_totally_destr IN ( 'N', 'Y' ) );

Table BUILDING altered.

SQL> 
SQL> COMMENT ON COLUMN building.building_id IS
  2      'building ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building.pro_id IS
  2      'property ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building.building_size IS
  2      'building size (in square metres)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building.building_date IS
  2      'building construction  date';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building.building_class IS
  2      'building class';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building.building_insur_cov IS
  2      'building_insurance_coverage';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building.builidng_totally_destr IS
  2      'check if building is totally destroyed';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN building.insur_code IS
  2      'insurer code';

Comment created.

SQL> 
SQL> ALTER TABLE building ADD CONSTRAINT building_pk PRIMARY KEY ( building_id,
  2                                                                pro_id );

Table BUILDING altered.

SQL> 
SQL> CREATE TABLE employment (
  2      assessor_id  NUMBER(7) NOT NULL,
  3      insur_code   NUMBER(7) NOT NULL,
  4      emp_sdate    DATE NOT NULL,
  5      emp_ldate    DATE NOT NULL
  6  );

Table EMPLOYMENT created.

SQL> 
SQL> COMMENT ON COLUMN employment.assessor_id IS
  2      'assessor ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employment.insur_code IS
  2      'insurer code';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employment.emp_sdate IS
  2      'employment start date';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employment.emp_ldate IS
  2      'employment leave date';

Comment created.

SQL> 
SQL> ALTER TABLE employment ADD CONSTRAINT employment_pk PRIMARY KEY ( assessor_id,
  2                                                                    insur_code );

Table EMPLOYMENT altered.

SQL> 
SQL> CREATE TABLE fire_event (
  2      fire_event_id          CHAR(9 BYTE) NOT NULL,
  3      fire_event_name        VARCHAR2(50 BYTE) NOT NULL,
  4      fire_event_sdate       DATE NOT NULL,
  5      fire_event_latitude    NUMBER(9, 6) NOT NULL,
  6      fire_event_longtitude  NUMBER(9, 6) NOT NULL,
  7      fire_event_burnarea    NUMBER(11, 2) DEFAULT 0 NOT NULL,
  8      fire_event_lilost      NUMBER(2) NOT NULL,
  9      fire_event_tdamage     NUMBER(9, 2) NOT NULL,
 10      fire_event_sparkid     CHAR(9 BYTE)
 11  );

Table FIRE_EVENT created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fire_event_id IS
  2      'fire event ID
  3  ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fire_event_name IS
  2      'the name of the fire event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fire_event_sdate IS
  2      'the start-date of the fire event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fire_event_latitude IS
  2      'the latitude of the fire event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fire_event_longtitude IS
  2      ' longtitude of the event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fire_event_burnarea IS
  2      'fire_event_burned_area (in hectare)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fire_event_lilost IS
  2      'fire_event_lives_lost';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fire_event_tdamage IS
  2      'total damage of the fire event';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_event.fire_event_sparkid IS
  2      'fire event ID
  3  ';

Comment created.

SQL> 
SQL> ALTER TABLE fire_event ADD CONSTRAINT fire_event_pk PRIMARY KEY ( fire_event_id );

Table FIRE_EVENT altered.

SQL> 
SQL> CREATE TABLE fire_lga (
  2      fire_event_id  CHAR(9 BYTE) NOT NULL,
  3      lga_code       NUMBER(2) NOT NULL
  4  );

Table FIRE_LGA created.

SQL> 
SQL> COMMENT ON COLUMN fire_lga.fire_event_id IS
  2      'fire event ID
  3  ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN fire_lga.lga_code IS
  2      'local government area code';

Comment created.

SQL> 
SQL> ALTER TABLE fire_lga ADD CONSTRAINT fire_lga_pk PRIMARY KEY ( fire_event_id,
  2                                                                lga_code );

Table FIRE_LGA altered.

SQL> 
SQL> CREATE TABLE insurer (
  2      insur_code         NUMBER(7) NOT NULL,
  3      insur_lname        VARCHAR2(30 BYTE),
  4      insur_fname        VARCHAR2(30 BYTE),
  5      insur_phonenumber  CHAR(10) NOT NULL
  6  );

Table INSURER created.

SQL> 
SQL> COMMENT ON COLUMN insurer.insur_code IS
  2      'insurer code';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN insurer.insur_lname IS
  2      'insurer last name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN insurer.insur_fname IS
  2      'insurer family name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN insurer.insur_phonenumber IS
  2      'insurer''s phone number';

Comment created.

SQL> 
SQL> ALTER TABLE insurer ADD CONSTRAINT insurer_pk PRIMARY KEY ( insur_code );

Table INSURER altered.

SQL> 
SQL> CREATE TABLE local_government_area (
  2      lga_code         NUMBER(2) NOT NULL,
  3      lga_name         VARCHAR2(25 BYTE) NOT NULL,
  4      lga_size         NUMBER(7) NOT NULL,
  5      lga_ceo_name     VARCHAR2(25 BYTE) NOT NULL,
  6      lga_phonenumber  CHAR(10) NOT NULL
  7  );

Table LOCAL_GOVERNMENT_AREA created.

SQL> 
SQL> COMMENT ON COLUMN local_government_area.lga_code IS
  2      'local government area code';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN local_government_area.lga_name IS
  2      'the name of local government area';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN local_government_area.lga_size IS
  2      'local government area (km^2)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN local_government_area.lga_ceo_name IS
  2      'name of CEO of local government area';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN local_government_area.lga_phonenumber IS
  2      'phone number of local government area office';

Comment created.

SQL> 
SQL> ALTER TABLE local_government_area ADD CONSTRAINT local_government_area_pk PRIMARY
  2  KEY ( lga_code );

Table LOCAL_GOVERNMENT_AREA altered.

SQL> 
SQL> CREATE TABLE owner (
  2      owner_id           NUMBER(7) NOT NULL,
  3      owner_name         VARCHAR2(30 BYTE) NOT NULL,
  4      owner_phonenumber  CHAR(10 BYTE) NOT NULL
  5  );

Table OWNER created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_id IS
  2      'owner_id';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_name IS
  2      'owner''s name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_phonenumber IS
  2      'owner''s phone number';

Comment created.

SQL> 
SQL> ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_id );

Table OWNER altered.

SQL> 
SQL> CREATE TABLE property (
  2      pro_id           NUMBER(7) NOT NULL,
  3      pro_addstreet    VARCHAR2(30) NOT NULL,
  4      pro_addtown      VARCHAR2(30 BYTE) NOT NULL,
  5      pro_addpostcode  CHAR(4 BYTE) NOT NULL,
  6      pro_size         NUMBER(5) NOT NULL,
  7      pro_type         CHAR(1 BYTE) NOT NULL,
  8      lga_code         NUMBER(2) NOT NULL,
  9      owner_id         NUMBER(7) NOT NULL,
 10      pro_ty_id        NUMBER(2) NOT NULL
 11  );

Table PROPERTY created.

SQL> 
SQL> ALTER TABLE property
  2      ADD CHECK ( pro_type IN ( 'B', 'C', 'F', 'T' ) );

Table PROPERTY altered.

SQL> 
SQL> COMMENT ON COLUMN property.pro_id IS
  2      'property ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.pro_addstreet IS
  2      'property  street address';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.pro_addtown IS
  2      'property twon address';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.pro_addpostcode IS
  2      'postcode of the property';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.pro_size IS
  2      'property size(km^2)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.pro_type IS
  2      'property type';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.lga_code IS
  2      'local government area code';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.owner_id IS
  2      'owner_id';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.pro_ty_id IS
  2      'property type ID';

Comment created.

SQL> 
SQL> ALTER TABLE property ADD CONSTRAINT property_pk PRIMARY KEY ( pro_id );

Table PROPERTY altered.

SQL> 
SQL> CREATE TABLE property_type (
  2      pro_ty_id    NUMBER(2) NOT NULL,
  3      pro_ty_name  VARCHAR2(40) NOT NULL
  4  );

Table PROPERTY_TYPE created.

SQL> 
SQL> COMMENT ON COLUMN property_type.pro_ty_id IS
  2      'property type ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property_type.pro_ty_name IS
  2      'property type name';

Comment created.

SQL> 
SQL> ALTER TABLE property_type ADD CONSTRAINT property_type_pk PRIMARY KEY ( pro_ty_id );

Table PROPERTY_TYPE altered.

SQL> 
SQL> CREATE TABLE visit (
  2      vi_no               NUMBER(7) NOT NULL,
  3      pro_id              NUMBER(7) NOT NULL,
  4      building_id         NUMBER(3) NOT NULL,
  5      vi_arr_datetime     DATE NOT NULL,
  6      vi_depart_datetime  DATE NOT NULL,
  7      fire_event_id       CHAR(9 BYTE) NOT NULL
  8  );

Table VISIT created.

SQL> 
SQL> COMMENT ON COLUMN visit.vi_no IS
  2      'visit number (surrogate key)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.pro_id IS
  2      'property ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.building_id IS
  2      'building ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.vi_arr_datetime IS
  2      'visit_arrived_date';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.vi_depart_datetime IS
  2      'visit_depart_date';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN visit.fire_event_id IS
  2      'fire event ID
  3  ';

Comment created.

SQL> 
SQL> ALTER TABLE visit ADD CONSTRAINT visit_pk PRIMARY KEY ( vi_no );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE visit
  2      ADD CONSTRAINT visit_nk UNIQUE ( vi_arr_datetime,
  3                                       pro_id,
  4                                       building_id );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE employment
  2      ADD CONSTRAINT assessor_employment FOREIGN KEY ( assessor_id )
  3          REFERENCES assessor ( assessor_id );

Table EMPLOYMENT altered.

SQL> 
SQL> ALTER TABLE assessment_damage
  2      ADD CONSTRAINT building_assessment_damage FOREIGN KEY ( building_id,
  3                                                              pro_id )
  4          REFERENCES building ( building_id,
  5                                pro_id );

Table ASSESSMENT_DAMAGE altered.

SQL> 
SQL> ALTER TABLE visit
  2      ADD CONSTRAINT building_visit FOREIGN KEY ( building_id,
  3                                                  pro_id )
  4          REFERENCES building ( building_id,
  5                                pro_id );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE assessment_damage
  2      ADD CONSTRAINT fire_event_asse_damage FOREIGN KEY ( fire_event_id )
  3          REFERENCES fire_event ( fire_event_id );

Table ASSESSMENT_DAMAGE altered.

SQL> 
SQL> ALTER TABLE fire_lga
  2      ADD CONSTRAINT fire_event_fire_lga FOREIGN KEY ( fire_event_id )
  3          REFERENCES fire_event ( fire_event_id );

Table FIRE_LGA altered.

SQL> 
SQL> ALTER TABLE visit
  2      ADD CONSTRAINT fire_event_visit FOREIGN KEY ( fire_event_id )
  3          REFERENCES fire_event ( fire_event_id );

Table VISIT altered.

SQL> 
SQL> ALTER TABLE employment
  2      ADD CONSTRAINT insurer FOREIGN KEY ( insur_code )
  3          REFERENCES insurer ( insur_code );

Table EMPLOYMENT altered.

SQL> 
SQL> ALTER TABLE assessor
  2      ADD CONSTRAINT insurer_assessor FOREIGN KEY ( insur_code )
  3          REFERENCES insurer ( insur_code );

Table ASSESSOR altered.

SQL> 
SQL> ALTER TABLE building
  2      ADD CONSTRAINT insurer_building FOREIGN KEY ( insur_code )
  3          REFERENCES insurer ( insur_code );

Table BUILDING altered.

SQL> 
SQL> ALTER TABLE fire_lga
  2      ADD CONSTRAINT lga_fire_lga FOREIGN KEY ( lga_code )
  3          REFERENCES local_government_area ( lga_code );

Table FIRE_LGA altered.

SQL> 
SQL> ALTER TABLE property
  2      ADD CONSTRAINT lga_property FOREIGN KEY ( lga_code )
  3          REFERENCES local_government_area ( lga_code );

Table PROPERTY altered.

SQL> 
SQL> ALTER TABLE property
  2      ADD CONSTRAINT owner_property FOREIGN KEY ( owner_id )
  3          REFERENCES owner ( owner_id );

Table PROPERTY altered.

SQL> 
SQL> ALTER TABLE building
  2      ADD CONSTRAINT property_building FOREIGN KEY ( pro_id )
  3          REFERENCES property ( pro_id );

Table BUILDING altered.

SQL> 
SQL> ALTER TABLE property
  2      ADD CONSTRAINT property_type_property FOREIGN KEY ( pro_ty_id )
  3          REFERENCES property_type ( pro_ty_id );

Table PROPERTY altered.

SQL> 
SQL> ALTER TABLE fire_event
  2      ADD CONSTRAINT relation_18 FOREIGN KEY ( fire_event_sparkid )
  3          REFERENCES fire_event ( fire_event_id );

Table FIRE_EVENT altered.

SQL> 
SQL> ALTER TABLE assessment_damage
  2      ADD CONSTRAINT relation_8 FOREIGN KEY ( assessor_id )
  3          REFERENCES assessor ( assessor_id );

Table ASSESSMENT_DAMAGE altered.

SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                            12
SQL> -- CREATE INDEX                             0
SQL> -- ALTER TABLE                             33
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          0
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> 
SQL> spool off
