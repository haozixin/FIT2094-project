SQL> 
SQL> DROP TABLE damage CASCADE CONSTRAINTS;

Table DAMAGE dropped.

SQL> 
SQL> DROP TABLE maintenance CASCADE CONSTRAINTS;

Table MAINTENANCE dropped.

SQL> 
SQL> DROP TABLE owner CASCADE CONSTRAINTS;

Table OWNER dropped.

SQL> 
SQL> DROP TABLE paid_by_method CASCADE CONSTRAINTS;

Table PAID_BY_METHOD dropped.

SQL> 
SQL> DROP TABLE payment CASCADE CONSTRAINTS;

Table PAYMENT dropped.

SQL> 
SQL> DROP TABLE property CASCADE CONSTRAINTS;

Table PROPERTY dropped.

SQL> 
SQL> DROP TABLE rent CASCADE CONSTRAINTS;

Table RENT dropped.

SQL> 
SQL> DROP TABLE tenant CASCADE CONSTRAINTS;

Table TENANT dropped.

SQL> 
SQL> -- predefined type, no DDL - MDSYS.SDO_GEOMETRY
SQL> 
SQL> -- predefined type, no DDL - XMLTYPE
SQL> 
SQL> CREATE TABLE damage (
  2      dam_no       NUMBER(7) NOT NULL,
  3      dam_prop_no  NUMBER(7) NOT NULL,
  4      dam_date     DATE NOT NULL,
  5      dam_time     DATE NOT NULL,
  6      dam_type     VARCHAR2(25 BYTE) NOT NULL,
  7      dam_cost     NUMBER NOT NULL,
  8      pay_no       NUMBER(7),
  9      rent_no      NUMBER(7) NOT NULL
 10  );

Table DAMAGE created.

SQL> 
SQL> COMMENT ON COLUMN damage.dam_no IS
  2      'damage number(surrogate PK)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN damage.dam_prop_no IS
  2      'damage property Number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN damage.dam_date IS
  2      'the date of damage';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN damage.dam_time IS
  2      'the time of the damage';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN damage.dam_type IS
  2      'the type of the damage';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN damage.dam_cost IS
  2      'the cost of the damage';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN damage.pay_no IS
  2      'payment number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN damage.rent_no IS
  2      'rent number';

Comment created.

SQL> 
SQL> CREATE UNIQUE INDEX damage__idx ON
  2      damage (
  3          pay_no
  4      ASC );

INDEX DAMAGE__IDX created.

SQL> 
SQL> ALTER TABLE damage ADD CONSTRAINT damage_pk PRIMARY KEY ( dam_no );

Table DAMAGE altered.

SQL> 
SQL> ALTER TABLE damage
  2      ADD CONSTRAINT damage_nk UNIQUE ( dam_date,
  3                                        dam_time,
  4                                        dam_prop_no );

Table DAMAGE altered.

SQL> 
SQL> CREATE TABLE maintenance (
  2      prop_no         NUMBER(7) NOT NULL,
  3      maint_datetime  DATE NOT NULL,
  4      maint_cost      NUMBER NOT NULL,
  5      maint_desc      VARCHAR2(50 BYTE) NOT NULL,
  6      owner_no        NUMBER(7) NOT NULL
  7  );

Table MAINTENANCE created.

SQL> 
SQL> COMMENT ON COLUMN maintenance.prop_no IS
  2      'property number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN maintenance.maint_datetime IS
  2      'maintenance date';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN maintenance.maint_cost IS
  2      'maintenance cost';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN maintenance.maint_desc IS
  2      'maintenance describe';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN maintenance.owner_no IS
  2      'owner number';

Comment created.

SQL> 
SQL> ALTER TABLE maintenance ADD CONSTRAINT maintenance_pk PRIMARY KEY ( prop_no,
  2                                                                      maint_datetime );

Table MAINTENANCE altered.

SQL> 
SQL> CREATE TABLE owner (
  2      owner_no           NUMBER(7) NOT NULL,
  3      owner_title        VARCHAR2(20 BYTE) NOT NULL,
  4      owner_gname        VARCHAR2(15 BYTE) NOT NULL,
  5      owner_fname        VARCHAR2(15 BYTE) NOT NULL,
  6      owner_ad_street    VARCHAR2(20 BYTE) NOT NULL,
  7      owner_ad_city      VARCHAR2(20 BYTE) NOT NULL,
  8      owner_ad_state     VARCHAR2(20 BYTE) NOT NULL,
  9      owner_ad_postcode  VARCHAR2(4 BYTE) NOT NULL
 10  );

Table OWNER created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_no IS
  2      'owner number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_title IS
  2      'owner''s title';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_gname IS
  2      'owner''s given name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_fname IS
  2      'owner''s family name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_ad_street IS
  2      'owner_address_street';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_ad_city IS
  2      'owner_address_city';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_ad_state IS
  2      'owner_address_state';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN owner.owner_ad_postcode IS
  2      'owner_address_postcode';

Comment created.

SQL> 
SQL> ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_no );

Table OWNER altered.

SQL> 
SQL> CREATE TABLE paid_by_method (
  2      paymet_id    NUMBER(7) NOT NULL,
  3      paymet_name  VARCHAR2(10) NOT NULL
  4  );

Table PAID_BY_METHOD created.

SQL> 
SQL> COMMENT ON COLUMN paid_by_method.paymet_id IS
  2      'pay method ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN paid_by_method.paymet_name IS
  2      'name of payment methods';

Comment created.

SQL> 
SQL> ALTER TABLE paid_by_method ADD CONSTRAINT paid_by_method_pk PRIMARY KEY ( paymet_id );

Table PAID_BY_METHOD altered.

SQL> 
SQL> CREATE TABLE payment (
  2      pay_no      NUMBER(7) NOT NULL,
  3      pay_date    DATE NOT NULL,
  4      pay_time    DATE NOT NULL,
  5      pay_type    VARCHAR2(10 BYTE) NOT NULL,
  6      pay_amount  NUMBER NOT NULL,
  7      paymet_id   NUMBER(7) NOT NULL,
  8      rent_no     NUMBER(7) NOT NULL
  9  );

Table PAYMENT created.

SQL> 
SQL> ALTER TABLE payment
  2      ADD CONSTRAINT chk_payment_type CHECK ( pay_type IN ( 'B', 'D', 'R' ) );

Table PAYMENT altered.

SQL> 
SQL> COMMENT ON COLUMN payment.pay_no IS
  2      'payment number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment.pay_date IS
  2      'payment date';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment.pay_time IS
  2      'payment time';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment.pay_type IS
  2      'payment type';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment.pay_amount IS
  2      'the amount of payment';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment.paymet_id IS
  2      'pay method ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment.rent_no IS
  2      'rent number';

Comment created.

SQL> 
SQL> ALTER TABLE payment ADD CONSTRAINT payment_pk PRIMARY KEY ( pay_no );

Table PAYMENT altered.

SQL> 
SQL> CREATE TABLE property (
  2      prop_no           NUMBER(7) NOT NULL,
  3      prop_ad_street    VARCHAR2(15 BYTE) NOT NULL,
  4      prop_ad_city      VARCHAR2(15 BYTE) NOT NULL,
  5      prop_ad_state     VARCHAR2(15 BYTE) NOT NULL,
  6      prop_ad_postcode  VARCHAR2(15 BYTE) NOT NULL,
  7      prop_value        NUMBER(4) NOT NULL,
  8      owner_no          NUMBER(7) NOT NULL
  9  );

Table PROPERTY created.

SQL> 
SQL> COMMENT ON COLUMN property.prop_no IS
  2      'property number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.prop_ad_street IS
  2      'property address street';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.prop_ad_city IS
  2      'property address city';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.prop_ad_state IS
  2      'property address state';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.prop_ad_postcode IS
  2      'property address postcode';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.prop_value IS
  2      'property value';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN property.owner_no IS
  2      'owner number';

Comment created.

SQL> 
SQL> ALTER TABLE property ADD CONSTRAINT property_pk PRIMARY KEY ( prop_no );

Table PROPERTY altered.

SQL> 
SQL> CREATE TABLE rent (
  2      rent_no               NUMBER(7) NOT NULL,
  3      prop_no               NUMBER(7) NOT NULL,
  4      rent_lease_startdate  DATE NOT NULL,
  5      rent_bond             NUMBER NOT NULL,
  6      rent_lease_period     VARCHAR2(10 BYTE) NOT NULL,
  7      rent_weekly_rate      NUMBER,
  8      tenant_no             NUMBER(7) NOT NULL
  9  );

Table RENT created.

SQL> 
SQL> COMMENT ON COLUMN rent.rent_no IS
  2      'rent number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN rent.prop_no IS
  2      'property number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN rent.rent_lease_startdate IS
  2      'the start date of rent lease';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN rent.rent_bond IS
  2      'rent bond';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN rent.rent_lease_period IS
  2      'period of rent lease';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN rent.rent_weekly_rate IS
  2      'rent weekly rate';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN rent.tenant_no IS
  2      'tenant number';

Comment created.

SQL> 
SQL> ALTER TABLE rent ADD CONSTRAINT rent_pk PRIMARY KEY ( rent_no );

Table RENT altered.

SQL> 
SQL> ALTER TABLE rent ADD CONSTRAINT rent_nk UNIQUE ( rent_lease_startdate,
  2                                                   prop_no );

Table RENT altered.

SQL> 
SQL> CREATE TABLE tenant (
  2      tenant_no         NUMBER(7) NOT NULL,
  3      tenant_title      VARCHAR2(20 BYTE) NOT NULL,
  4      tenant_fname      VARCHAR2(20 BYTE),
  5      tenant_gname      VARCHAR2(20 BYTE),
  6      tenant_ad_street  VARCHAR2(20 BYTE) NOT NULL,
  7      tenant_ad_city    VARCHAR2(20 BYTE) NOT NULL,
  8      tenant_ad_state   VARCHAR2(20 BYTE) NOT NULL,
  9      tenant_ad_pcode   CHAR(4 BYTE) NOT NULL,
 10      tenant_phone      CHAR(9 BYTE) NOT NULL
 11  );

Table TENANT created.

SQL> 
SQL> COMMENT ON COLUMN tenant.tenant_no IS
  2      'tenant number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN tenant.tenant_title IS
  2      'tenant title';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN tenant.tenant_fname IS
  2      'tenant family name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN tenant.tenant_gname IS
  2      'tenant given name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN tenant.tenant_ad_street IS
  2      'tenant address - street';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN tenant.tenant_ad_city IS
  2      'tenant address - city';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN tenant.tenant_ad_state IS
  2      'tenant_ad_state';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN tenant.tenant_ad_pcode IS
  2      'tenant address - postcode';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN tenant.tenant_phone IS
  2      'tenant phone number';

Comment created.

SQL> 
SQL> ALTER TABLE tenant ADD CONSTRAINT tenant_pk PRIMARY KEY ( tenant_no );

Table TENANT altered.

SQL> 
SQL> ALTER TABLE damage
  2      ADD CONSTRAINT damage_payment FOREIGN KEY ( pay_no )
  3          REFERENCES payment ( pay_no );

Table DAMAGE altered.

SQL> 
SQL> ALTER TABLE maintenance
  2      ADD CONSTRAINT owner_maintenance FOREIGN KEY ( owner_no )
  3          REFERENCES owner ( owner_no );

Table MAINTENANCE altered.

SQL> 
SQL> ALTER TABLE property
  2      ADD CONSTRAINT owner_property FOREIGN KEY ( owner_no )
  3          REFERENCES owner ( owner_no );

Table PROPERTY altered.

SQL> 
SQL> ALTER TABLE payment
  2      ADD CONSTRAINT payment_paid_by_method FOREIGN KEY ( paymet_id )
  3          REFERENCES paid_by_method ( paymet_id );

Table PAYMENT altered.

SQL> 
SQL> ALTER TABLE maintenance
  2      ADD CONSTRAINT property_maintenance FOREIGN KEY ( prop_no )
  3          REFERENCES property ( prop_no );

Table MAINTENANCE altered.

SQL> 
SQL> ALTER TABLE rent
  2      ADD CONSTRAINT property_rent FOREIGN KEY ( prop_no )
  3          REFERENCES property ( prop_no );

Table RENT altered.

SQL> 
SQL> ALTER TABLE damage
  2      ADD CONSTRAINT rent_damage FOREIGN KEY ( rent_no )
  3          REFERENCES rent ( rent_no );

Table DAMAGE altered.

SQL> 
SQL> ALTER TABLE payment
  2      ADD CONSTRAINT rent_payment FOREIGN KEY ( rent_no )
  3          REFERENCES rent ( rent_no );

Table PAYMENT altered.

SQL> 
SQL> ALTER TABLE rent
  2      ADD CONSTRAINT tenant_rent FOREIGN KEY ( tenant_no )
  3          REFERENCES tenant ( tenant_no );

Table RENT altered.

SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                             8
SQL> -- CREATE INDEX                             1
SQL> -- ALTER TABLE                             20
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          0
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> spool off
